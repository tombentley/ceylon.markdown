import ceylon.test{test,assertEquals}
import ceylon.markdown.core{parse}
import ceylon.markdown.html{renderPartialHtml}
import ceylon.html{renderTemplate,Node}

/*
  The code in this file was generated by the make_tests.py script
  You might want to run it from time to time
  to keep these tests up to date with the latest
  commonmark spec tests
*/
shared class Code_spans() {
    String render(String md) {
        value sb = StringBuilder();
        value f = sb.append;
        for (node in renderPartialHtml(parse(md))) {
            assert(is Node node);
            renderTemplate(node, f);
        }
        return sb.string;
    }

    """Test for example 313 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-313"""
    test
    shared void specTest_Code_spans_313() {
        value md = "\`foo\`\n";
        value html = "<p><code>foo</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 314 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-314"""
    test
    shared void specTest_Code_spans_314() {
        value md = "\`\` foo \` bar  \`\`\n";
        value html = "<p><code>foo \` bar</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 315 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-315"""
    test
    shared void specTest_Code_spans_315() {
        value md = "\` \`\` \`\n";
        value html = "<p><code>\`\`</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 316 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-316"""
    test
    shared void specTest_Code_spans_316() {
        value md = "\`\`\nfoo\n\`\`\n";
        value html = "<p><code>foo</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 317 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-317"""
    test
    shared void specTest_Code_spans_317() {
        value md = "\`foo   bar\n  baz\`\n";
        value html = "<p><code>foo bar baz</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 318 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-318"""
    test
    shared void specTest_Code_spans_318() {
        value md = "\`foo \`\` bar\`\n";
        value html = "<p><code>foo \`\` bar</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 319 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-319"""
    test
    shared void specTest_Code_spans_319() {
        value md = "\`foo\\\`bar\`\n";
        value html = "<p><code>foo\\</code>bar\`</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 320 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-320"""
    test
    shared void specTest_Code_spans_320() {
        value md = "*foo\`*\`\n";
        value html = "<p>*foo<code>*</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 321 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-321"""
    test
    shared void specTest_Code_spans_321() {
        value md = "[not a \`link](/foo\`)\n";
        value html = "<p>[not a <code>link](/foo</code>)</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 322 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-322"""
    test
    shared void specTest_Code_spans_322() {
        value md = "\`<a href=\"\`\">\`\n";
        value html = "<p><code>&lt;a href=&quot;</code>&quot;&gt;\`</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 323 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-323"""
    test
    shared void specTest_Code_spans_323() {
        value md = "<a href=\"\`\">\`\n";
        value html = "<p><a href=\"\`\">\`</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 324 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-324"""
    test
    shared void specTest_Code_spans_324() {
        value md = "\`<http://foo.bar.\`baz>\`\n";
        value html = "<p><code>&lt;http://foo.bar.</code>baz&gt;\`</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 325 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-325"""
    test
    shared void specTest_Code_spans_325() {
        value md = "<http://foo.bar.\`baz>\`\n";
        value html = "<p><a href=\"http://foo.bar.%60baz\">http://foo.bar.\`baz</a>\`</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 326 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-326"""
    test
    shared void specTest_Code_spans_326() {
        value md = "\`\`\`foo\`\`\n";
        value html = "<p>\`\`\`foo\`\`</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 327 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-327"""
    test
    shared void specTest_Code_spans_327() {
        value md = "\`foo\n";
        value html = "<p>\`foo</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

}
