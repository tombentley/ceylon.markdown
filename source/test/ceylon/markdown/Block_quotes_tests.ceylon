import ceylon.test{test,assertEquals}
import ceylon.markdown.core{parse}
import ceylon.markdown.html{renderPartialHtml}
import ceylon.html{renderTemplate,Node}

/*
  The code in this file was generated by the make_tests.py script
  You might want to run it from time to time
  to keep these tests up to date with the latest
  commonmark spec tests
*/
shared class Block_quotes() {
    String render(String md) {
        value sb = StringBuilder();
        value f = sb.append;
        for (node in renderPartialHtml(parse(md))) {
            assert(is Node node);
            renderTemplate(node, f);
        }
        return sb.string;
    }

    """Test for example 189 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-189"""
    test
    shared void specTest_Block_quotes_189() {
        value md = "> # Foo\n> bar\n> baz\n";
        value html = "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 190 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-190"""
    test
    shared void specTest_Block_quotes_190() {
        value md = "># Foo\n>bar\n> baz\n";
        value html = "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 191 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-191"""
    test
    shared void specTest_Block_quotes_191() {
        value md = "   > # Foo\n   > bar\n > baz\n";
        value html = "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 192 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-192"""
    test
    shared void specTest_Block_quotes_192() {
        value md = "    > # Foo\n    > bar\n    > baz\n";
        value html = "<pre><code>&gt; # Foo\n&gt; bar\n&gt; baz\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 193 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-193"""
    test
    shared void specTest_Block_quotes_193() {
        value md = "> # Foo\n> bar\nbaz\n";
        value html = "<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 194 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-194"""
    test
    shared void specTest_Block_quotes_194() {
        value md = "> bar\nbaz\n> foo\n";
        value html = "<blockquote>\n<p>bar\nbaz\nfoo</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 195 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-195"""
    test
    shared void specTest_Block_quotes_195() {
        value md = "> foo\n---\n";
        value html = "<blockquote>\n<p>foo</p>\n</blockquote>\n<hr />\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 196 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-196"""
    test
    shared void specTest_Block_quotes_196() {
        value md = "> - foo\n- bar\n";
        value html = "<blockquote>\n<ul>\n<li>foo</li>\n</ul>\n</blockquote>\n<ul>\n<li>bar</li>\n</ul>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 197 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-197"""
    test
    shared void specTest_Block_quotes_197() {
        value md = ">     foo\n    bar\n";
        value html = "<blockquote>\n<pre><code>foo\n</code></pre>\n</blockquote>\n<pre><code>bar\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 198 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-198"""
    test
    shared void specTest_Block_quotes_198() {
        value md = "> \`\`\`\nfoo\n\`\`\`\n";
        value html = "<blockquote>\n<pre><code></code></pre>\n</blockquote>\n<p>foo</p>\n<pre><code></code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 199 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-199"""
    test
    shared void specTest_Block_quotes_199() {
        value md = "> foo\n    - bar\n";
        value html = "<blockquote>\n<p>foo\n- bar</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 200 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-200"""
    test
    shared void specTest_Block_quotes_200() {
        value md = ">\n";
        value html = "<blockquote>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 201 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-201"""
    test
    shared void specTest_Block_quotes_201() {
        value md = ">\n>  \n> \n";
        value html = "<blockquote>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 202 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-202"""
    test
    shared void specTest_Block_quotes_202() {
        value md = ">\n> foo\n>  \n";
        value html = "<blockquote>\n<p>foo</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 203 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-203"""
    test
    shared void specTest_Block_quotes_203() {
        value md = "> foo\n\n> bar\n";
        value html = "<blockquote>\n<p>foo</p>\n</blockquote>\n<blockquote>\n<p>bar</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 204 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-204"""
    test
    shared void specTest_Block_quotes_204() {
        value md = "> foo\n> bar\n";
        value html = "<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 205 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-205"""
    test
    shared void specTest_Block_quotes_205() {
        value md = "> foo\n>\n> bar\n";
        value html = "<blockquote>\n<p>foo</p>\n<p>bar</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 206 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-206"""
    test
    shared void specTest_Block_quotes_206() {
        value md = "foo\n> bar\n";
        value html = "<p>foo</p>\n<blockquote>\n<p>bar</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 207 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-207"""
    test
    shared void specTest_Block_quotes_207() {
        value md = "> aaa\n***\n> bbb\n";
        value html = "<blockquote>\n<p>aaa</p>\n</blockquote>\n<hr />\n<blockquote>\n<p>bbb</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 208 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-208"""
    test
    shared void specTest_Block_quotes_208() {
        value md = "> bar\nbaz\n";
        value html = "<blockquote>\n<p>bar\nbaz</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 209 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-209"""
    test
    shared void specTest_Block_quotes_209() {
        value md = "> bar\n\nbaz\n";
        value html = "<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 210 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-210"""
    test
    shared void specTest_Block_quotes_210() {
        value md = "> bar\n>\nbaz\n";
        value html = "<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 211 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-211"""
    test
    shared void specTest_Block_quotes_211() {
        value md = "> > > foo\nbar\n";
        value html = "<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n</blockquote>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 212 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-212"""
    test
    shared void specTest_Block_quotes_212() {
        value md = ">>> foo\n> bar\n>>baz\n";
        value html = "<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar\nbaz</p>\n</blockquote>\n</blockquote>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 213 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-213"""
    test
    shared void specTest_Block_quotes_213() {
        value md = ">     code\n\n>    not code\n";
        value html = "<blockquote>\n<pre><code>code\n</code></pre>\n</blockquote>\n<blockquote>\n<p>not code</p>\n</blockquote>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

}
