import ceylon.test{test,assertEquals}
import ceylon.markdown.core{parse}
import ceylon.markdown.html{renderPartialHtml}
import ceylon.html{renderTemplate,Node}

/*
  The code in this file was generated by the make_tests.py script
  You might want to run it from time to time
  to keep these tests up to date with the latest
  commonmark spec tests
*/
shared class Entity_and_numeric_character_references() {
    String render(String md) {
        value sb = StringBuilder();
        value f = sb.append;
        for (node in renderPartialHtml(parse(md))) {
            assert(is Node node);
            renderTemplate(node, f);
        }
        return sb.string;
    }

    """Test for example 301 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-301"""
    test
    shared void specTest_Entity_and_numeric_character_references_301() {
        value md = "&nbsp; &amp; &copy; &AElig; &Dcaron;\n&frac34; &HilbertSpace; &DifferentialD;\n&ClockwiseContourIntegral; &ngE;\n";
        value html = "<p>  &amp; © Æ Ď\n¾ ℋ ⅆ\n∲ ≧̸</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 302 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-302"""
    test
    shared void specTest_Entity_and_numeric_character_references_302() {
        value md = "&#35; &#1234; &#992; &#98765432; &#0;\n";
        value html = "<p># Ӓ Ϡ � �</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 303 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-303"""
    test
    shared void specTest_Entity_and_numeric_character_references_303() {
        value md = "&#X22; &#XD06; &#xcab;\n";
        value html = "<p>&quot; ആ ಫ</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 304 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-304"""
    test
    shared void specTest_Entity_and_numeric_character_references_304() {
        value md = "&nbsp &x; &#; &#x;\n&ThisIsNotDefined; &hi?;\n";
        value html = "<p>&amp;nbsp &amp;x; &amp;#; &amp;#x;\n&amp;ThisIsNotDefined; &amp;hi?;</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 305 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-305"""
    test
    shared void specTest_Entity_and_numeric_character_references_305() {
        value md = "&copy\n";
        value html = "<p>&amp;copy</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 306 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-306"""
    test
    shared void specTest_Entity_and_numeric_character_references_306() {
        value md = "&MadeUpEntity;\n";
        value html = "<p>&amp;MadeUpEntity;</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 307 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-307"""
    test
    shared void specTest_Entity_and_numeric_character_references_307() {
        value md = "<a href=\"&ouml;&ouml;.html\">\n";
        value html = "<a href=\"&ouml;&ouml;.html\">\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 308 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-308"""
    test
    shared void specTest_Entity_and_numeric_character_references_308() {
        value md = "[foo](/f&ouml;&ouml; \"f&ouml;&ouml;\")\n";
        value html = "<p><a href=\"/f%C3%B6%C3%B6\" title=\"föö\">foo</a></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 309 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-309"""
    test
    shared void specTest_Entity_and_numeric_character_references_309() {
        value md = "[foo]\n\n[foo]: /f&ouml;&ouml; \"f&ouml;&ouml;\"\n";
        value html = "<p><a href=\"/f%C3%B6%C3%B6\" title=\"föö\">foo</a></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 310 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-310"""
    test
    shared void specTest_Entity_and_numeric_character_references_310() {
        value md = "\`\`\` f&ouml;&ouml;\nfoo\n\`\`\`\n";
        value html = "<pre><code class=\"language-föö\">foo\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 311 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-311"""
    test
    shared void specTest_Entity_and_numeric_character_references_311() {
        value md = "\`f&ouml;&ouml;\`\n";
        value html = "<p><code>f&amp;ouml;&amp;ouml;</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 312 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-312"""
    test
    shared void specTest_Entity_and_numeric_character_references_312() {
        value md = "    f&ouml;f&ouml;\n";
        value html = "<pre><code>f&amp;ouml;f&amp;ouml;\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

}
