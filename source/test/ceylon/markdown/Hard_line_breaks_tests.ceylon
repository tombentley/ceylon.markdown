import ceylon.test{test,assertEquals}
import ceylon.markdown.core{parse}
import ceylon.markdown.html{renderPartialHtml}
import ceylon.html{renderTemplate,Node}

/*
  The code in this file was generated by the make_tests.py script
  You might want to run it from time to time
  to keep these tests up to date with the latest
  commonmark spec tests
*/
shared class Hard_line_breaks() {
    String render(String md) {
        value sb = StringBuilder();
        value f = sb.append;
        for (node in renderPartialHtml(parse(md))) {
            assert(is Node node);
            renderTemplate(node, f);
        }
        return sb.string;
    }

    """Test for example 600 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-600"""
    test
    shared void specTest_Hard_line_breaks_600() {
        value md = "foo  \nbaz\n";
        value html = "<p>foo<br />\nbaz</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 601 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-601"""
    test
    shared void specTest_Hard_line_breaks_601() {
        value md = "foo\\\nbaz\n";
        value html = "<p>foo<br />\nbaz</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 602 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-602"""
    test
    shared void specTest_Hard_line_breaks_602() {
        value md = "foo       \nbaz\n";
        value html = "<p>foo<br />\nbaz</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 603 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-603"""
    test
    shared void specTest_Hard_line_breaks_603() {
        value md = "foo  \n     bar\n";
        value html = "<p>foo<br />\nbar</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 604 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-604"""
    test
    shared void specTest_Hard_line_breaks_604() {
        value md = "foo\\\n     bar\n";
        value html = "<p>foo<br />\nbar</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 605 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-605"""
    test
    shared void specTest_Hard_line_breaks_605() {
        value md = "*foo  \nbar*\n";
        value html = "<p><em>foo<br />\nbar</em></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 606 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-606"""
    test
    shared void specTest_Hard_line_breaks_606() {
        value md = "*foo\\\nbar*\n";
        value html = "<p><em>foo<br />\nbar</em></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 607 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-607"""
    test
    shared void specTest_Hard_line_breaks_607() {
        value md = "\`code  \nspan\`\n";
        value html = "<p><code>code span</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 608 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-608"""
    test
    shared void specTest_Hard_line_breaks_608() {
        value md = "\`code\\\nspan\`\n";
        value html = "<p><code>code\\ span</code></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 609 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-609"""
    test
    shared void specTest_Hard_line_breaks_609() {
        value md = "<a href=\"foo  \nbar\">\n";
        value html = "<p><a href=\"foo  \nbar\"></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 610 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-610"""
    test
    shared void specTest_Hard_line_breaks_610() {
        value md = "<a href=\"foo\\\nbar\">\n";
        value html = "<p><a href=\"foo\\\nbar\"></p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 611 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-611"""
    test
    shared void specTest_Hard_line_breaks_611() {
        value md = "foo\\\n";
        value html = "<p>foo\\</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 612 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-612"""
    test
    shared void specTest_Hard_line_breaks_612() {
        value md = "foo  \n";
        value html = "<p>foo</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 613 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-613"""
    test
    shared void specTest_Hard_line_breaks_613() {
        value md = "### foo\\\n";
        value html = "<h3>foo\\</h3>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 614 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-614"""
    test
    shared void specTest_Hard_line_breaks_614() {
        value md = "### foo  \n";
        value html = "<h3>foo</h3>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

}
