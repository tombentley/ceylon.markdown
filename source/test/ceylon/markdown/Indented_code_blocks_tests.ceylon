import ceylon.test{test,assertEquals}
import ceylon.markdown.core{parse}
import ceylon.markdown.html{renderPartialHtml}
import ceylon.html{renderTemplate,Node}

/*
  The code in this file was generated by the make_tests.py script
  You might want to run it from time to time
  to keep these tests up to date with the latest
  commonmark spec tests
*/
shared class Indented_code_blocks() {
    String render(String md) {
        value sb = StringBuilder();
        value f = sb.append;
        for (node in renderPartialHtml(parse(md))) {
            assert(is Node node);
            renderTemplate(node, f);
        }
        return sb.string;
    }

    """Test for example 76 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-76"""
    test
    shared void specTest_Indented_code_blocks_76() {
        value md = "    a simple\n      indented code block\n";
        value html = "<pre><code>a simple\n  indented code block\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 77 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-77"""
    test
    shared void specTest_Indented_code_blocks_77() {
        value md = "  - foo\n\n    bar\n";
        value html = "<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 78 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-78"""
    test
    shared void specTest_Indented_code_blocks_78() {
        value md = "1.  foo\n\n    - bar\n";
        value html = "<ol>\n<li>\n<p>foo</p>\n<ul>\n<li>bar</li>\n</ul>\n</li>\n</ol>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 79 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-79"""
    test
    shared void specTest_Indented_code_blocks_79() {
        value md = "    <a/>\n    *hi*\n\n    - one\n";
        value html = "<pre><code>&lt;a/&gt;\n*hi*\n\n- one\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 80 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-80"""
    test
    shared void specTest_Indented_code_blocks_80() {
        value md = "    chunk1\n\n    chunk2\n  \n \n \n    chunk3\n";
        value html = "<pre><code>chunk1\n\nchunk2\n\n\n\nchunk3\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 81 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-81"""
    test
    shared void specTest_Indented_code_blocks_81() {
        value md = "    chunk1\n      \n      chunk2\n";
        value html = "<pre><code>chunk1\n  \n  chunk2\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 82 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-82"""
    test
    shared void specTest_Indented_code_blocks_82() {
        value md = "Foo\n    bar\n\n";
        value html = "<p>Foo\nbar</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 83 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-83"""
    test
    shared void specTest_Indented_code_blocks_83() {
        value md = "    foo\nbar\n";
        value html = "<pre><code>foo\n</code></pre>\n<p>bar</p>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 84 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-84"""
    test
    shared void specTest_Indented_code_blocks_84() {
        value md = "# Heading\n    foo\nHeading\n------\n    foo\n----\n";
        value html = "<h1>Heading</h1>\n<pre><code>foo\n</code></pre>\n<h2>Heading</h2>\n<pre><code>foo\n</code></pre>\n<hr />\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 85 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-85"""
    test
    shared void specTest_Indented_code_blocks_85() {
        value md = "        foo\n    bar\n";
        value html = "<pre><code>    foo\nbar\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 86 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-86"""
    test
    shared void specTest_Indented_code_blocks_86() {
        value md = "\n    \n    foo\n    \n\n";
        value html = "<pre><code>foo\n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

    """Test for example 87 from the common mark spec (v0.26).
       See http://spec.commonmark.org/0.26/#example-87"""
    test
    shared void specTest_Indented_code_blocks_87() {
        value md = "    foo  \n";
        value html = "<pre><code>foo  \n</code></pre>\n";
        assertEquals{
            expected = html;
            actual = render(md);
        };
    }

}
